---
name: "release"

# yamllint disable-line rule:truthy
on:
  workflow_dispatch:
    inputs:
      release_type:
        description: "release type"
        default: "patch"
        required: true
        type: choice
        options:
          - patch
          - minor
          - major

permissions:
  attestations: write
  id-token: write
  contents: write

jobs:
  build:
    name: build
    runs-on: ubuntu-24.04-arm
    strategy:
      fail-fast: false
      matrix:
        architecture:
          # need to debug libvterm-0.3.3
          # - arm
          - arm64

    steps:
      - name: Checkout
        uses: actions/checkout@v5

      - name: Setup QEMU
        uses: docker/setup-qemu-action@v3.6.0

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v3.10.0

      - name: Build termsp
        run: |
          make bin/${{ matrix.architecture }}/termsp
          mv bin/${{ matrix.architecture }}/termsp termsp-${{ matrix.architecture }}

      - name: Attest Build Provenance
        uses: actions/attest-build-provenance@v2.4.0
        with:
          subject-path: "termsp-${{ matrix.architecture }}"

      - name: Upload Artifacts
        uses: actions/upload-artifact@v5
        with:
          name: termsp-${{ matrix.architecture }}
          path: termsp-${{ matrix.architecture }}

  release:
    name: release
    runs-on: ubuntu-24.04
    needs: build
    steps:
      - name: Checkout
        uses: actions/checkout@v5
        with:
          fetch-depth: 0

      - name: Download Artifacts
        uses: actions/download-artifact@v6
        with:
          path: dist
          pattern: termsp-*
          merge-multiple: true

      - name: Write version
        run: |
          version="$(grep TERMSP_VERSION Makefile | head -n1 | awk '{print $3}')"
          echo "$version" > "dist/version-${version}"

      - name: Get Latest Tag
        id: latest-tag
        run: |
          GIT_LATEST_TAG="$(git describe --tags "$(git rev-list --tags --max-count=1 2>/dev/null || true)" 2>/dev/null || true)"
          if [ -z "$GIT_LATEST_TAG" ]; then
            GIT_LATEST_TAG="0.0.0"
          fi
          echo "GIT_LATEST_TAG=$GIT_LATEST_TAG" >> "$GITHUB_OUTPUT"

      - name: Compute Next Tag
        id: next-tag
        uses: docker://ghcr.io/dokku/semver-generator:latest
        with:
          bump: ${{ github.event.inputs.release_type }}
          input: ${{ steps.latest-tag.outputs.GIT_LATEST_TAG }}

      - name: Create and Push Tag
        run: |
          git config --global user.email "action@github.com"
          git config --global user.name "GitHub Action"
          git tag "$GIT_NEXT_TAG"
          git push origin "$GIT_NEXT_TAG"
        env:
          GIT_NEXT_TAG: ${{ steps.next-tag.outputs.version }}

      - name: Release
        uses: softprops/action-gh-release@v2
        with:
          files: dist/*
          generate_release_notes: true
          make_latest: "true"
          tag_name: ${{ steps.next-tag.outputs.version }}
